///////////////////////////////////////////////////////////
//  Conta.cs
//  Implementation of the Class Conta
//  Generated by Enterprise Architect
//  Created on:      16-fev-2009 17:36:57
//  Original author: p016905
///////////////////////////////////////////////////////////

using System.Collections; 
using System.Collections.Generic;
using System;
using financa.db;

namespace financa.model
{

    public class Conta
    {
        private List<Categoria> m_Categorias = new List<Categoria>();
        private Usuario m_Usuario;
        private int _codigo;
        private decimal _valor;
        private string _descricao;

        public Conta()
        {

        }

        public Conta(string descricao, Usuario usuario)
        {
            this._descricao = descricao;
            this.m_Usuario = usuario;
            this.selecionar();
        }

        public decimal valor
        {
            get
            {
                return _valor;
            }
            set
            {
                _valor = value;
            }
        }

        public string descricao
        {
            get
            {
                return _descricao;
            }
            set
            {
                _descricao = value;
            }
        }

        public Usuario usuario
        {
            get { return this.m_Usuario; }
            set { this.m_Usuario = value; }
        }

        public List<Categoria> categorias
        {
            get
            {
                return this.m_Categorias;
            }
            set { this.m_Categorias = value; }
        }

        public void criar()
        {
            try
            {
                db4o.conectar();
                if (db4o.Selecionar(this, this.descricao) != null)
                    throw (new Exception("Esta conta já está cadastrada!"));

                db4o.cadastrar(this);
            }
            catch (Exception erro)
            {
                db4o.rollBack();
                throw (new Exception(erro.Message));
            }
            finally
            {
                db4o.desconectar();
            }
        }

        public bool selecionar()
        {
            Conta c;
            try
            {
                db4o.conectar();
                c = (Conta)db4o.Selecionar(this);
                if (c != null)
                {
                    this.categorias = c.categorias;
                    this.descricao = c.descricao;
                    this.usuario = c.usuario;
                    this.valor = c.valor;
                    return true;
                }
            }
            finally
            {
                c = null;
                db4o.desconectar();
            }

            return false;
        }

        public void adicionarCategoria(Categoria c)
        {
            Conta conta;
            try
            {

                db4o.conectar();
                conta = (Conta)db4o.Selecionar(this);
                c.conta = conta;
                c.id = db4o.getMax(c) + 1;
                if (db4o.Selecionar(c) != null)
                    throw (new Exception("Categoria já cadastrada!"));

                conta.categorias.Add(c);
                db4o.cadastrar(conta);
            }
            catch (Exception erro)
            {
                db4o.rollBack();
                throw (new Exception(erro.Message));
            }
            finally
            {
                conta = null;
                db4o.desconectar();
            }
        }

        public IList listar()
        {
            List<Conta> cs = new List<Conta>();

            try
            {
                db4o.conectar();
                foreach (Conta c in db4o.listar(this))
                { // db.Query<Conta>();
                    cs.Add(c);
                }
            }
            finally
            {
                db4o.desconectar();
            }

            return cs;
        }


        public Categoria getCategoria(string descricao)
        {
            foreach (Categoria c in this.categorias)
            {
                if (c.descricao.Equals(descricao))
                    return c;
            }
            return null;
        }
    }//end Conta
}