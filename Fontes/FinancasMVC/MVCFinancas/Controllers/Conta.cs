///////////////////////////////////////////////////////////
//  Conta.cs
//  Implementation of the Class Conta
//  Generated by Enterprise Architect
//  Created on:      16-fev-2009 17:36:57
//  Original author: p016905
///////////////////////////////////////////////////////////

using System.Collections; 
using System.Collections.Generic;
using System;

namespace MVCFinancas.Controllers
{
    public class Conta
    {
        private List<Categoria> m_Categorias;
        private Usuario m_Usuario;
        private int _codigo;
        private decimal _valor;
        private string _descricao;

        public Conta()
        {

        }

        public Conta(string descricao, Usuario usuario)
        {
            this._descricao = descricao;
            this.m_Usuario = usuario;
            this.selecionar();
        }

        public decimal valor
        {
            get
            {
                return _valor;
            }
            set
            {
                _valor = value;
            }
        }

        public string descricao
        {
            get
            {
                return _descricao;
            }
            set
            {
                _descricao = value;
            }
        }

        public Usuario usuario
        {
            get { return this.m_Usuario; }
            set { this.m_Usuario = value; }
        }

        public List<Categoria> categorias
        {
            get
            {
                if (m_Categorias == null)
                    m_Categorias = new List<Categoria>();

                return this.m_Categorias;
            }
            //set { this.m_Categorias.Add(value); }
        }

        /// 
        /// <param name="usuario"></param>
        public IList listar(Usuario usuario)
        {
            ArrayList cs;

            this.usuario = usuario;
            cs = (ArrayList)db4o.listar(this); // db.Query<Conta>();
            //c.descricao = "Casa";
            //cs.AddLast(c);
            //c = new Conta();
            //c.descricao = "Carro";
            //cs.AddLast(c);

            return cs;
        }

        public void criar()
        {
            if (this.selecionar())
                throw (new Exception("Esta conta já está cadastrada!"));

            db4o.cadastrar(this);
        }

        public bool selecionar()
        {
            Conta c = (Conta)db4o.Selecionar(this);
            if (c != null)
            {
                this.valor = c.valor;
                this.m_Categorias = c.categorias;
                return true;
            }

            return false;
        }

        public void adicionarCategoria(Categoria c)
        {
            this.categorias.Add(c);
            db4o.cadastrar(this);
        }

    }//end Conta
}