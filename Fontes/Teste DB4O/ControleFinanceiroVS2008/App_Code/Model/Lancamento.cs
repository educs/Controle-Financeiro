///////////////////////////////////////////////////////////
//  Lancamento.cs
//  Implementation of the Class Lancamento
//  Generated by Enterprise Architect
//  Created on:      16-fev-2009 17:36:57
//  Original author: p016905
///////////////////////////////////////////////////////////

using System;
using System.Drawing;
using System.Collections;
using System.Collections.Generic;
using financa.db;
//using Db4objects.Db4o.Activation;
//using Db4objects.Db4o.TA;
//using Db4objects.Db4o;

namespace financa.model
{

    [Serializable]
    public class Lancamento
    {
        private long _id;
        private DateTime _data;
        protected decimal _valor;
        private Usuario _usuario;
        private string _descricao;
        private List<Produto> _produtos = new List<Produto>();
        protected byte[] _imagem;
        //private Conta conta;
        private Categoria _categoria;
        //[Transient]
        // private IActivator _activator;

        public Lancamento()
        {
        }
        /*
            public Lancamento(long initId){
                this._id = initId;
                this.buscarPorId();
            }
        */
        public long Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }

        public virtual Image Comprovante
        {
            get;
            set;
        }

        public virtual byte[] Imagem
        {
            get;
            set;
        }

        public DateTime data
        {
            get
            {
                return _data;
            }
            set
            {
                _data = value;
            }
        }

        public Usuario usuario
        {
            get
            {
                return _usuario;
            }
            set
            {
                this._usuario = value;
            }
        }

        public string descricao
        {
            set
            {
                this._descricao = value;
            }
            get
            {
                return this._descricao;
            }
        }


        public virtual decimal valor
        {
            get;
            set;
        }

        public List<Produto> produtos
        {
            get
            {
                return this._produtos;
            }
            set { this.produtos = value; }
        }

        public Categoria categoria
        {
            get
            {
                return this._categoria;
            }
            set
            {
                this._categoria = value;
            }
        }

        public decimal calculaValor()
        {
            decimal soma = 0;

            foreach (Produto p in this.produtos)
                {
                    soma += p.Valor * p.Quantidade;
                }

            return soma;
        }

        public IList listar()
        {
            List<Lancamento> ls = new List<Lancamento>();

            try
            {
                db4o.conectar();
                foreach (Lancamento l in db4o.listar(this))
                {
                    ls.Add(l);
                }
            }
            finally
            {
                db4o.desconectar();
            }

            return ls;
        }
        /*
        private void buscarPorId()
        {
            //object l = db4o.selecionarPeloId(this._id);
            FabricaLancamento.fabricarLancamento(this);
            /*this.data = l.data;
            this.descricao = l.descricao;
            this.produtos = l.produtos;
            this.usuario = l.usuario;
            this.valor = l.valor;
        }*/

    }//end Lancamento
}