///////////////////////////////////////////////////////////
//  Categoria.cs
//  Implementation of the Class Categoria
//  Generated by Enterprise Architect
//  Created on:      16-fev-2009 17:36:57
//  Original author: p016905
///////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using financa.db;

namespace financa.model
{

    public class Categoria
    {
        //private int _codigo;
        private string _descricao;
        private Conta _conta;
        private List<Lancamento> _lancamentos = new List<Lancamento>();
        private long _id;

        public Categoria()
        {

        }

        public Categoria(long initId)
        {
            this._id = initId;
            this.selecionar();
        }

        public Categoria(string descricao, Conta conta)
        {
            this._descricao = descricao;
            this._conta = conta;
            this.selecionar();
        }

        public long id
        {
            set
            {
                this._id = value;
            }
        }

        public string descricao
        {
            get
            {
                return _descricao;
            }
            set
            {
                _descricao = value;
            }
        }

        public Conta conta
        {
            get
            {
                return _conta;
            }
            set
            {
                this._conta = value;
            }
        }

        public List<Lancamento> lancamentos
        {
            get { return this._lancamentos; }
            set { this._lancamentos = value; }
        }

        public Categoria incluirLancamento(Lancamento l)
        {
            Categoria categoria;
            try
            {
                db4o.conectar();
                Categoria cat = new Categoria();
                cat.descricao = this.descricao;
                categoria = (Categoria)db4o.Selecionar(cat);
                l.Id = db4o.getMax(l) + 1;
                l.categoria = categoria;
                categoria.lancamentos.Add(l);

                db4o.cadastrar(categoria);
            }
            catch (Exception erro)
            {
                db4o.rollBack();
                throw (new Exception(erro.Message));
            }
            finally
            {
                db4o.desconectar();
            }

            return categoria;
        }


        public void cadastrar()
        {
            try
            {
                db4o.conectar();
                if (db4o.Selecionar(this, this.descricao) != null)
                    throw (new Exception("Esta categoria já está cadastrada!"));

                db4o.cadastrar(this);
            }
            catch (Exception erro)
            {
                db4o.rollBack();
                throw (new Exception(erro.Message));
            }
            finally
            {
                db4o.desconectar();
            }
        }

        public bool selecionar()
        {
            Categoria c;
            try
            {
                db4o.conectar();
                c = (Categoria)db4o.Selecionar(this);
                if (c != null)
                {
                    this.lancamentos = c.lancamentos;
                    this.descricao = c.descricao;
                    //this.conta = c.conta;
                    return true;
                }
            }
            finally
            {
                c = null;
                db4o.desconectar();
            }

            return false;
        }

        public IList listar()
        {
            List<Categoria> cs = new List<Categoria>();

            try
            {
                db4o.conectar();
                foreach (Categoria c in db4o.listar(this))
                { // db.Query<Conta>();
                    cs.Add(c);
                }
            }
            finally
            {
                db4o.desconectar();
            }

            return cs;
        }

    }//end Categoria
}